
// generated by Fast Light User Interface Designer (fluid) version 2.1000

//#include "starter.h"

/*#include "ai.xpm"
#include "client.xpm"
#include "server.xpm"
#include "scen.xpm"
#include "camp.xpm"
#include "theme.xpm"*/

#include <cstdlib>
#include <cstdio>
#include <string>
#include <iostream>

using namespace std;

#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_PNG_Image.H>
#include <FL/Fl_Image.H>
#include <FL/Fl_Shared_Image.H>
#include <Fl/fl_draw.H>

Fl_Window* win = (Fl_Window*)0;

string pfad(void* data) {
	int i = strlen((char*)data);
	i = i - 7;
	string help;
	help = (char*)data;
	help.erase(i, 7);
	cout << help << endl;
	return help;	
}

void server(Fl_Widget* w, void* data){
	string path = pfad(data);
	path += "attal-server --themepath "+path+"../Resources/themes/ &";
	system(path.c_str());
	win->hide();
}
void client(Fl_Widget* w, void* data){
	string path = pfad(data);
	path += "attal-client --themepath "+path+"../Resources/themes/ &";
	system(path.c_str());
	win->hide();
}
void ai(Fl_Widget* w, void* data){
	string path = pfad(data);
	path += "attal-ai --themepath "+path+"../Resources/themes/ &";
	system(path.c_str());
	win->hide();
}
void scen(Fl_Widget* w, void* data){
	string path = pfad(data);
	path += "attal-scenario-editor --themepath "+path+"../Resources/themes/ &";
	system(path.c_str());
	win->hide();
}
void camp(Fl_Widget* w, void* data){
	string path = pfad(data);
	path += "attal-campaign-editor --themepath "+path+"../Resources/themes/ &";
	system(path.c_str());
	win->hide();
}
void theme(Fl_Widget* w, void* data){
	string path = pfad(data);
	path += "attal-theme-editor --themepath "+path+"../Resources/themes/ &";
	system(path.c_str());
	win->hide();
}

int main (int argc, char **argv) {
  Fl::scheme("plastic");  
  Fl::visual(FL_RGB); 
  Fl::get_system_colors();
  fl_register_images();
  cout << argv[0] << endl;
  
   {Fl_Window* o = new Fl_Window(335, 220);
    win = o;
    o->label("Attal: Lords of Doom");
    o->align(FL_ALIGN_TOP|FL_ALIGN_INSIDE);
    o->begin();
     {Fl_Button* o = new Fl_Button(195, 152, 48, 48);
	  string serverstr = pfad(argv[0])+"../Resources/themes/medieval/images/misc/ico_attal-server.png";
      Fl_Shared_Image* img;
      img = (Fl_Shared_Image::get(serverstr.c_str()));
      Fl_Image *temp;
      temp = img->copy(o->w(), o->h() * img->h() / img->w()); 
      img->release();
      img = (Fl_Shared_Image *)temp;
      o->image(img);
      o->box(FL_DOWN_BOX);
      o->callback(server,argv[0]);
    }
     {Fl_Button* o = new Fl_Button(115, 25, 96, 96);
      string clientstr = pfad(argv[0])+"../Resources/themes/medieval/images/misc/ico_attal-client.png";
      //Fl_Shared_Image* img;
      o->image(Fl_Shared_Image::get(clientstr.c_str())); 
      /*Fl_Image *temp;
      temp = img->copy(128, 128 * img->h() / img->w()); 
      img->release();
      img = (Fl_Shared_Image *)temp;
      o->image(img);*/
      o->box(FL_NO_BOX);
      o->callback(client,argv[0]);
    }
     {Fl_Button* o = new Fl_Button(250, 112, 48, 48);
	  string aistr = pfad(argv[0])+"../Resources/themes/medieval/images/misc/ico_attal-ai.png";
      Fl_Shared_Image* img;
      img = (Fl_Shared_Image::get(aistr.c_str())); 
      Fl_Image *temp;
      temp = img->copy(o->w(), o->h() * img->h() / img->w()); 
      img->release();
      img = (Fl_Shared_Image *)temp;
      o->image(img);
      o->box(FL_DOWN_BOX);
      o->callback(ai,argv[0]);
    }
     {Fl_Button* o = new Fl_Button(30, 112, 48, 48);
	  string scenstr = pfad(argv[0])+"../Resources/themes/medieval/images/misc/ico_attal-scenario-editor.png";
      Fl_Shared_Image* img;
      img = (Fl_Shared_Image::get(scenstr.c_str())); 
      Fl_Image *temp;
      temp = img->copy(o->w(), o->h() * img->h() / img->w()); 
      img->release();
      img = (Fl_Shared_Image *)temp;
      o->image(img);
      o->box(FL_DOWN_BOX);
      o->callback(scen,argv[0]);
    }
     {Fl_Button* o = new Fl_Button(85, 152, 48, 48);
	  string campstr = pfad(argv[0])+"../Resources/themes/medieval/images/misc/ico_attal-campaign-editor.png";
      Fl_Shared_Image* img;
      img = (Fl_Shared_Image::get(campstr.c_str())); 
      Fl_Image *temp;
      temp = img->copy(o->w(), o->h() * img->h() / img->w()); 
      img->release();
      img = (Fl_Shared_Image *)temp;
      o->image(img);
      o->box(FL_DOWN_BOX);
      o->callback(camp,argv[0]);
    }
     {Fl_Button* o = new Fl_Button(140, 172, 48, 48);
	  string themestr = pfad(argv[0])+"../Resources/themes/medieval/images/misc/ico_attal-theme-editor.png";
	  Fl_Shared_Image* img;
      img = (Fl_Shared_Image::get(themestr.c_str())); 
      Fl_Image *temp;
      temp = img->copy(o->w(), o->h() * img->h() / img->w()); 
      img->release();
      img = (Fl_Shared_Image *)temp;
      o->image(img);
      o->box(FL_DOWN_BOX);
      o->callback(theme,argv[0]);
    }
     {string testpfad = pfad(argv[0]);
	  Fl_Box* o = new Fl_Box(75, -10, 185, 65, "");
      o->labeltype(FL_ENGRAVED_LABEL);
      o->labelsize(19);
      o->align(FL_ALIGN_INSIDE);
    }
    o->end();
    o->resizable(o);
  }
  win->show(argc, argv);
  return  Fl::run();
}
